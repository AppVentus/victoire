<?php
namespace Victoire\Bundle\MediaBundle\Tests\Entity;

use Victoire\Bundle\MediaBundle\Entity\Folder;

use Victoire\Bundle\MediaBundle\Entity\Media;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-28 at 14:19:20.
 */
class MediaTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Media
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Media;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getFileSize
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setFileSize
     */
    public function testSetFileSize()
    {
        $this->object->setFileSize(45);
        $this->assertEquals('45b', $this->object->getFileSize());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getUuid
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setUuid
     */
    public function testGetSetUuid()
    {
        $this->object->setUuid('abc');
        $this->assertEquals('abc', $this->object->getUuid());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getName
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setName
     */
    public function testGetSetName()
    {
        $this->object->setName('bcd');
        $this->assertEquals('bcd', $this->object->getName());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getLocation
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setLocation
     */
    public function testGetSetLocation()
    {
        $this->object->setLocation('cde');
        $this->assertEquals('cde', $this->object->getLocation());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getContentType
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setContentType
     */
    public function testGetSetContentType()
    {
        $this->object->setContentType('def');
        $this->assertEquals('def', $this->object->getContentType());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getCreatedAt
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setCreatedAt
     */
    public function testGetSetCreatedAt()
    {
        $date = new \DateTime();
        $this->object->setCreatedAt($date);
        $this->assertEquals($date, $this->object->getCreatedAt());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getUpdatedAt
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setUpdatedAt
     */
    public function testGetSetUpdatedAt()
    {
        $date = new \DateTime();
        $this->object->setUpdatedAt($date);
        $this->assertEquals($date, $this->object->getUpdatedAt());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getContent
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setContent
     */
    public function testGetContent()
    {
        $this->object->setContent('efg');
        $this->assertEquals('efg', $this->object->getContent());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::getFolder
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setFolder
     */
    public function testGetSetFolder()
    {
        $folder = new Folder();
        $folder->setId(45);
        $this->object->setFolder($folder);
        $this->assertEquals(45, $this->object->getFolder()->getId());
    }

    /**
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::setDeleted
     * @covers Victoire\Bundle\MediaBundle\Entity\Media::isDeleted
     */
    public function testSetDeleted()
    {
        $this->object->setDeleted(true);
        $this->assertEquals(true, $this->object->isDeleted());
        $this->object->setDeleted(false);
        $this->assertEquals(false, $this->object->isDeleted());
    }

}
