<?php
namespace {{ namespace }}\Theme;

use Victoire\Bundle\ThemeBundle\ThemeInterface;
use Victoire\Bundle\CoreBundle\Widget\Managers\ManagerInterface;

/**
 * {{ widget }}{{ theme }} manager
 */
class {{ widget }}{{ theme }} implements ThemeInterface
{

    private $themeManager;

    /**
     * Constructor function
     * @param ManagerInterface $themeManager The theme manager
     */
    public function __construct(ManagerInterface $themeManager)
    {
        $this->themeManager = $themeManager;
    }

    /**
     * theme name
     * @return string name
     **/
    public static function getName()
    {
        return 'theme{{ widget }}{{ theme }}';
    }

    /**
     * related widget
     * @return string widget name
     *
     **/
    public static function getWidgetName()
    {
        return '{{ widget|lower }}{{ theme }}';
    }

    /**
     * theme name
     *
     * @return string label
     **/
    public static function getLabel()
    {
        return 'widget.form.theme.' . self::getName();
    }

    /**
     * theme entity class
     *
     * @return string class
     **/
    public static function getClass()
    {
        return '{{ namespace }}\Entity\Theme{{ widget }}{{ theme }}';
    }

    /**
     * theme manager
     *
     * @return Manager manager
     **/
    public function getManager()
    {
        return $this->themeManager;
    }
}
