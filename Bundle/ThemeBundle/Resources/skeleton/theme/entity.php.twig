<?php
namespace {{ namespace }}\Entity;

use Doctrine\ORM\Mapping as ORM;
use {{ widgetEntityNamespace }}\Entity\Widget{{ widget }};
use Victoire\Bundle\CoreBundle\Theme\ThemeWidgetInterface;

/**
 * Theme{{ widget }}{{ theme }}
 *
 * @ORM\Table("vic_theme_{{ widget|lower }}_{{ theme|lower}}")
 * @ORM\Entity
 */
class Theme{{ widget ~ theme }} extends Widget{{ widget }} implements ThemeWidgetInterface
{
{% for field in fields %}

    /**
     * @var {{ field.type }}
     *
     * @ORM\Column(name="{{ field.columnName }}", type="{{ field.type }}"{% if field.length is defined %}, length={{ field.length}}{% endif %})
     */
    protected ${{ field.fieldName }};
{% endfor %}

    /**
     * To String function
     * Used in render choices type (Especially in VictoireThemeRenderBundle)
     * @todo Check the generated value and make it more consistent
     *
     * @return String
     */
    public function __toString()
    {
        return '#'.$this->id.' - '.$this->{{ toStringProperty }};
    }

{% for field in fields %}

    /**
     * Set {{ field.fieldName }}
     *
     * @param string ${{ field.fieldName }} The value to set to {{ field.fieldName }}
     */
    public function set{{ field.fieldName|capitalize }}(${{ field.fieldName }})
    {
        $this->{{ field.fieldName }} = ${{ field.fieldName }};

        return $this;
    }

    /**
     * Get {{ field.fieldName }}
     *
     * @return string The {{ field.fieldName }} value
     */
    public function get{{ field.fieldName|capitalize }}()
    {
        return $this->{{ field.fieldName }};
    }
{% endfor %}

}
